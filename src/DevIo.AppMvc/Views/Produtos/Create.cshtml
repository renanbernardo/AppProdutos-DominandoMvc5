@model DevIo.AppMvc.ViewModels.ProdutoViewModel

@{
    ViewBag.Title = "Novo Produto";
}

<h2>@ViewBag.Title </h2>
<hr />

@using (Html.BeginForm("Create", "Produtos", FormMethod.Post, new { id = "produtoForm" } ))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.FornecedorId, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.FornecedorId,
                new SelectList(Model.Fornecedores, "Id", "Nome"),
                String.Empty, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FornecedorId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextAreaFor(model => model.Descricao, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Imagem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Imagem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Imagem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Valor, new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextBoxFor(model => model.Valor, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ativo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.CheckBoxFor(model => model.Ativo, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-3">
                <input type="submit" value="Cadastrar" class="btn btn-primary" />
                <a href="@Url.Action("Index", "Fornecedores")" class="btn btn-info">Voltar</a>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $('#produtoForm').submit(function () {
            const valor = $('#Valor').val();
            $('#Valor').val(valor.replace(".", ""));
        })

        $("#Valor").attr("data-val-number", "Moeda em formato inválido");
    </script>
}
